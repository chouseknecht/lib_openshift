# coding: utf-8

"""
    

    

    OpenAPI spec version: 
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import lib_openshift
from lib_openshift.rest import ApiException
from lib_openshift.apis.api_v1 import ApiV1


class TestApiV1(unittest.TestCase):
    """ ApiV1 unit test stubs """

    def setUp(self):
        self.api = lib_openshift.apis.api_v1.ApiV1()

    def tearDown(self):
        pass

    def test_create_configmap(self):
        """
        Test case for create_configmap

        create a ConfigMap
        """
        pass

    def test_create_endpoint(self):
        """
        Test case for create_endpoint

        create a Endpoints
        """
        pass

    def test_create_event(self):
        """
        Test case for create_event

        create a Event
        """
        pass

    def test_create_limitrange(self):
        """
        Test case for create_limitrange

        create a LimitRange
        """
        pass

    def test_create_namespace(self):
        """
        Test case for create_namespace

        create a Namespace
        """
        pass

    def test_create_namespaced_configmap(self):
        """
        Test case for create_namespaced_configmap

        create a ConfigMap
        """
        pass

    def test_create_namespaced_endpoint(self):
        """
        Test case for create_namespaced_endpoint

        create a Endpoints
        """
        pass

    def test_create_namespaced_event(self):
        """
        Test case for create_namespaced_event

        create a Event
        """
        pass

    def test_create_namespaced_limitrange(self):
        """
        Test case for create_namespaced_limitrange

        create a LimitRange
        """
        pass

    def test_create_namespaced_persistentvolumeclaim(self):
        """
        Test case for create_namespaced_persistentvolumeclaim

        create a PersistentVolumeClaim
        """
        pass

    def test_create_namespaced_pod(self):
        """
        Test case for create_namespaced_pod

        create a Pod
        """
        pass

    def test_create_namespaced_podtemplate(self):
        """
        Test case for create_namespaced_podtemplate

        create a PodTemplate
        """
        pass

    def test_create_namespaced_replicationcontroller(self):
        """
        Test case for create_namespaced_replicationcontroller

        create a ReplicationController
        """
        pass

    def test_create_namespaced_resourcequota(self):
        """
        Test case for create_namespaced_resourcequota

        create a ResourceQuota
        """
        pass

    def test_create_namespaced_secret(self):
        """
        Test case for create_namespaced_secret

        create a Secret
        """
        pass

    def test_create_namespaced_service(self):
        """
        Test case for create_namespaced_service

        create a Service
        """
        pass

    def test_create_namespaced_serviceaccount(self):
        """
        Test case for create_namespaced_serviceaccount

        create a ServiceAccount
        """
        pass

    def test_create_node(self):
        """
        Test case for create_node

        create a Node
        """
        pass

    def test_create_persistentvolume(self):
        """
        Test case for create_persistentvolume

        create a PersistentVolume
        """
        pass

    def test_create_persistentvolumeclaim(self):
        """
        Test case for create_persistentvolumeclaim

        create a PersistentVolumeClaim
        """
        pass

    def test_create_pod(self):
        """
        Test case for create_pod

        create a Pod
        """
        pass

    def test_create_podtemplate(self):
        """
        Test case for create_podtemplate

        create a PodTemplate
        """
        pass

    def test_create_replicationcontroller(self):
        """
        Test case for create_replicationcontroller

        create a ReplicationController
        """
        pass

    def test_create_resourcequota(self):
        """
        Test case for create_resourcequota

        create a ResourceQuota
        """
        pass

    def test_create_secret(self):
        """
        Test case for create_secret

        create a Secret
        """
        pass

    def test_create_securitycontextconstraint(self):
        """
        Test case for create_securitycontextconstraint

        create a SecurityContextConstraints
        """
        pass

    def test_create_service(self):
        """
        Test case for create_service

        create a Service
        """
        pass

    def test_create_serviceaccount(self):
        """
        Test case for create_serviceaccount

        create a ServiceAccount
        """
        pass

    def test_delete_namespace(self):
        """
        Test case for delete_namespace

        delete a Namespace
        """
        pass

    def test_delete_namespaced_configmap(self):
        """
        Test case for delete_namespaced_configmap

        delete a ConfigMap
        """
        pass

    def test_delete_namespaced_configmaps(self):
        """
        Test case for delete_namespaced_configmaps

        delete collection of ConfigMap
        """
        pass

    def test_delete_namespaced_endpoint(self):
        """
        Test case for delete_namespaced_endpoint

        delete a Endpoints
        """
        pass

    def test_delete_namespaced_endpoints(self):
        """
        Test case for delete_namespaced_endpoints

        delete collection of Endpoints
        """
        pass

    def test_delete_namespaced_event(self):
        """
        Test case for delete_namespaced_event

        delete a Event
        """
        pass

    def test_delete_namespaced_events(self):
        """
        Test case for delete_namespaced_events

        delete collection of Event
        """
        pass

    def test_delete_namespaced_limitrange(self):
        """
        Test case for delete_namespaced_limitrange

        delete a LimitRange
        """
        pass

    def test_delete_namespaced_limitranges(self):
        """
        Test case for delete_namespaced_limitranges

        delete collection of LimitRange
        """
        pass

    def test_delete_namespaced_persistentvolumeclaim(self):
        """
        Test case for delete_namespaced_persistentvolumeclaim

        delete a PersistentVolumeClaim
        """
        pass

    def test_delete_namespaced_persistentvolumeclaims(self):
        """
        Test case for delete_namespaced_persistentvolumeclaims

        delete collection of PersistentVolumeClaim
        """
        pass

    def test_delete_namespaced_pod(self):
        """
        Test case for delete_namespaced_pod

        delete a Pod
        """
        pass

    def test_delete_namespaced_pods(self):
        """
        Test case for delete_namespaced_pods

        delete collection of Pod
        """
        pass

    def test_delete_namespaced_podtemplate(self):
        """
        Test case for delete_namespaced_podtemplate

        delete a PodTemplate
        """
        pass

    def test_delete_namespaced_podtemplates(self):
        """
        Test case for delete_namespaced_podtemplates

        delete collection of PodTemplate
        """
        pass

    def test_delete_namespaced_replicationcontroller(self):
        """
        Test case for delete_namespaced_replicationcontroller

        delete a ReplicationController
        """
        pass

    def test_delete_namespaced_replicationcontrollers(self):
        """
        Test case for delete_namespaced_replicationcontrollers

        delete collection of ReplicationController
        """
        pass

    def test_delete_namespaced_resourcequota(self):
        """
        Test case for delete_namespaced_resourcequota

        delete a ResourceQuota
        """
        pass

    def test_delete_namespaced_resourcequotas(self):
        """
        Test case for delete_namespaced_resourcequotas

        delete collection of ResourceQuota
        """
        pass

    def test_delete_namespaced_secret(self):
        """
        Test case for delete_namespaced_secret

        delete a Secret
        """
        pass

    def test_delete_namespaced_secrets(self):
        """
        Test case for delete_namespaced_secrets

        delete collection of Secret
        """
        pass

    def test_delete_namespaced_service(self):
        """
        Test case for delete_namespaced_service

        delete a Service
        """
        pass

    def test_delete_namespaced_serviceaccount(self):
        """
        Test case for delete_namespaced_serviceaccount

        delete a ServiceAccount
        """
        pass

    def test_delete_namespaced_serviceaccounts(self):
        """
        Test case for delete_namespaced_serviceaccounts

        delete collection of ServiceAccount
        """
        pass

    def test_delete_namespaces(self):
        """
        Test case for delete_namespaces

        delete collection of Namespace
        """
        pass

    def test_delete_node(self):
        """
        Test case for delete_node

        delete a Node
        """
        pass

    def test_delete_nodes(self):
        """
        Test case for delete_nodes

        delete collection of Node
        """
        pass

    def test_delete_persistentvolume(self):
        """
        Test case for delete_persistentvolume

        delete a PersistentVolume
        """
        pass

    def test_delete_persistentvolumes(self):
        """
        Test case for delete_persistentvolumes

        delete collection of PersistentVolume
        """
        pass

    def test_delete_securitycontextconstraint(self):
        """
        Test case for delete_securitycontextconstraint

        delete a SecurityContextConstraints
        """
        pass

    def test_delete_securitycontextconstraints(self):
        """
        Test case for delete_securitycontextconstraints

        delete collection of SecurityContextConstraints
        """
        pass

    def test_get_componentstatus(self):
        """
        Test case for get_componentstatus

        read the specified ComponentStatus
        """
        pass

    def test_get_namespace(self):
        """
        Test case for get_namespace

        read the specified Namespace
        """
        pass

    def test_get_namespaced_configmap(self):
        """
        Test case for get_namespaced_configmap

        read the specified ConfigMap
        """
        pass

    def test_get_namespaced_endpoint(self):
        """
        Test case for get_namespaced_endpoint

        read the specified Endpoints
        """
        pass

    def test_get_namespaced_event(self):
        """
        Test case for get_namespaced_event

        read the specified Event
        """
        pass

    def test_get_namespaced_limitrange(self):
        """
        Test case for get_namespaced_limitrange

        read the specified LimitRange
        """
        pass

    def test_get_namespaced_persistentvolumeclaim(self):
        """
        Test case for get_namespaced_persistentvolumeclaim

        read the specified PersistentVolumeClaim
        """
        pass

    def test_get_namespaced_pod(self):
        """
        Test case for get_namespaced_pod

        read the specified Pod
        """
        pass

    def test_get_namespaced_pod_log(self):
        """
        Test case for get_namespaced_pod_log

        read log of the specified Pod
        """
        pass

    def test_get_namespaced_podtemplate(self):
        """
        Test case for get_namespaced_podtemplate

        read the specified PodTemplate
        """
        pass

    def test_get_namespaced_replicationcontroller(self):
        """
        Test case for get_namespaced_replicationcontroller

        read the specified ReplicationController
        """
        pass

    def test_get_namespaced_replicationcontroller_scale(self):
        """
        Test case for get_namespaced_replicationcontroller_scale

        read scale of the specified Scale
        """
        pass

    def test_get_namespaced_resourcequota(self):
        """
        Test case for get_namespaced_resourcequota

        read the specified ResourceQuota
        """
        pass

    def test_get_namespaced_secret(self):
        """
        Test case for get_namespaced_secret

        read the specified Secret
        """
        pass

    def test_get_namespaced_service(self):
        """
        Test case for get_namespaced_service

        read the specified Service
        """
        pass

    def test_get_namespaced_serviceaccount(self):
        """
        Test case for get_namespaced_serviceaccount

        read the specified ServiceAccount
        """
        pass

    def test_get_node(self):
        """
        Test case for get_node

        read the specified Node
        """
        pass

    def test_get_persistentvolume(self):
        """
        Test case for get_persistentvolume

        read the specified PersistentVolume
        """
        pass

    def test_get_securitycontextconstraint(self):
        """
        Test case for get_securitycontextconstraint

        read the specified SecurityContextConstraints
        """
        pass

    def test_list(self):
        """
        Test case for list

        get available resources
        """
        pass

    def test_list_componentstatuses(self):
        """
        Test case for list_componentstatuses

        list objects of kind ComponentStatus
        """
        pass

    def test_list_configmaps(self):
        """
        Test case for list_configmaps

        list or watch objects of kind ConfigMap
        """
        pass

    def test_list_endpoints(self):
        """
        Test case for list_endpoints

        list or watch objects of kind Endpoints
        """
        pass

    def test_list_events(self):
        """
        Test case for list_events

        list or watch objects of kind Event
        """
        pass

    def test_list_limitranges(self):
        """
        Test case for list_limitranges

        list or watch objects of kind LimitRange
        """
        pass

    def test_list_namespaced_configmaps(self):
        """
        Test case for list_namespaced_configmaps

        list or watch objects of kind ConfigMap
        """
        pass

    def test_list_namespaced_endpoints(self):
        """
        Test case for list_namespaced_endpoints

        list or watch objects of kind Endpoints
        """
        pass

    def test_list_namespaced_events(self):
        """
        Test case for list_namespaced_events

        list or watch objects of kind Event
        """
        pass

    def test_list_namespaced_limitranges(self):
        """
        Test case for list_namespaced_limitranges

        list or watch objects of kind LimitRange
        """
        pass

    def test_list_namespaced_persistentvolumeclaims(self):
        """
        Test case for list_namespaced_persistentvolumeclaims

        list or watch objects of kind PersistentVolumeClaim
        """
        pass

    def test_list_namespaced_pods(self):
        """
        Test case for list_namespaced_pods

        list or watch objects of kind Pod
        """
        pass

    def test_list_namespaced_podtemplates(self):
        """
        Test case for list_namespaced_podtemplates

        list or watch objects of kind PodTemplate
        """
        pass

    def test_list_namespaced_replicationcontrollers(self):
        """
        Test case for list_namespaced_replicationcontrollers

        list or watch objects of kind ReplicationController
        """
        pass

    def test_list_namespaced_resourcequotas(self):
        """
        Test case for list_namespaced_resourcequotas

        list or watch objects of kind ResourceQuota
        """
        pass

    def test_list_namespaced_secrets(self):
        """
        Test case for list_namespaced_secrets

        list or watch objects of kind Secret
        """
        pass

    def test_list_namespaced_serviceaccounts(self):
        """
        Test case for list_namespaced_serviceaccounts

        list or watch objects of kind ServiceAccount
        """
        pass

    def test_list_namespaced_services(self):
        """
        Test case for list_namespaced_services

        list or watch objects of kind Service
        """
        pass

    def test_list_namespaces(self):
        """
        Test case for list_namespaces

        list or watch objects of kind Namespace
        """
        pass

    def test_list_nodes(self):
        """
        Test case for list_nodes

        list or watch objects of kind Node
        """
        pass

    def test_list_persistentvolumeclaims(self):
        """
        Test case for list_persistentvolumeclaims

        list or watch objects of kind PersistentVolumeClaim
        """
        pass

    def test_list_persistentvolumes(self):
        """
        Test case for list_persistentvolumes

        list or watch objects of kind PersistentVolume
        """
        pass

    def test_list_pods(self):
        """
        Test case for list_pods

        list or watch objects of kind Pod
        """
        pass

    def test_list_podtemplates(self):
        """
        Test case for list_podtemplates

        list or watch objects of kind PodTemplate
        """
        pass

    def test_list_replicationcontrollers(self):
        """
        Test case for list_replicationcontrollers

        list or watch objects of kind ReplicationController
        """
        pass

    def test_list_resourcequotas(self):
        """
        Test case for list_resourcequotas

        list or watch objects of kind ResourceQuota
        """
        pass

    def test_list_secrets(self):
        """
        Test case for list_secrets

        list or watch objects of kind Secret
        """
        pass

    def test_list_securitycontextconstraints(self):
        """
        Test case for list_securitycontextconstraints

        list or watch objects of kind SecurityContextConstraints
        """
        pass

    def test_list_serviceaccounts(self):
        """
        Test case for list_serviceaccounts

        list or watch objects of kind ServiceAccount
        """
        pass

    def test_list_services(self):
        """
        Test case for list_services

        list or watch objects of kind Service
        """
        pass

    def test_patch_namespace(self):
        """
        Test case for patch_namespace

        partially update the specified Namespace
        """
        pass

    def test_patch_namespaced_configmap(self):
        """
        Test case for patch_namespaced_configmap

        partially update the specified ConfigMap
        """
        pass

    def test_patch_namespaced_endpoint(self):
        """
        Test case for patch_namespaced_endpoint

        partially update the specified Endpoints
        """
        pass

    def test_patch_namespaced_event(self):
        """
        Test case for patch_namespaced_event

        partially update the specified Event
        """
        pass

    def test_patch_namespaced_limitrange(self):
        """
        Test case for patch_namespaced_limitrange

        partially update the specified LimitRange
        """
        pass

    def test_patch_namespaced_persistentvolumeclaim(self):
        """
        Test case for patch_namespaced_persistentvolumeclaim

        partially update the specified PersistentVolumeClaim
        """
        pass

    def test_patch_namespaced_pod(self):
        """
        Test case for patch_namespaced_pod

        partially update the specified Pod
        """
        pass

    def test_patch_namespaced_podtemplate(self):
        """
        Test case for patch_namespaced_podtemplate

        partially update the specified PodTemplate
        """
        pass

    def test_patch_namespaced_replicationcontroller(self):
        """
        Test case for patch_namespaced_replicationcontroller

        partially update the specified ReplicationController
        """
        pass

    def test_patch_namespaced_replicationcontroller_scale(self):
        """
        Test case for patch_namespaced_replicationcontroller_scale

        partially update scale of the specified Scale
        """
        pass

    def test_patch_namespaced_resourcequota(self):
        """
        Test case for patch_namespaced_resourcequota

        partially update the specified ResourceQuota
        """
        pass

    def test_patch_namespaced_secret(self):
        """
        Test case for patch_namespaced_secret

        partially update the specified Secret
        """
        pass

    def test_patch_namespaced_service(self):
        """
        Test case for patch_namespaced_service

        partially update the specified Service
        """
        pass

    def test_patch_namespaced_serviceaccount(self):
        """
        Test case for patch_namespaced_serviceaccount

        partially update the specified ServiceAccount
        """
        pass

    def test_patch_node(self):
        """
        Test case for patch_node

        partially update the specified Node
        """
        pass

    def test_patch_persistentvolume(self):
        """
        Test case for patch_persistentvolume

        partially update the specified PersistentVolume
        """
        pass

    def test_patch_securitycontextconstraint(self):
        """
        Test case for patch_securitycontextconstraint

        partially update the specified SecurityContextConstraints
        """
        pass

    def test_replace_namespace(self):
        """
        Test case for replace_namespace

        replace the specified Namespace
        """
        pass

    def test_replace_namespace_finalize(self):
        """
        Test case for replace_namespace_finalize

        replace finalize of the specified Namespace
        """
        pass

    def test_replace_namespace_status(self):
        """
        Test case for replace_namespace_status

        replace status of the specified Namespace
        """
        pass

    def test_replace_namespaced_configmap(self):
        """
        Test case for replace_namespaced_configmap

        replace the specified ConfigMap
        """
        pass

    def test_replace_namespaced_endpoint(self):
        """
        Test case for replace_namespaced_endpoint

        replace the specified Endpoints
        """
        pass

    def test_replace_namespaced_event(self):
        """
        Test case for replace_namespaced_event

        replace the specified Event
        """
        pass

    def test_replace_namespaced_limitrange(self):
        """
        Test case for replace_namespaced_limitrange

        replace the specified LimitRange
        """
        pass

    def test_replace_namespaced_persistentvolumeclaim(self):
        """
        Test case for replace_namespaced_persistentvolumeclaim

        replace the specified PersistentVolumeClaim
        """
        pass

    def test_replace_namespaced_persistentvolumeclaim_status(self):
        """
        Test case for replace_namespaced_persistentvolumeclaim_status

        replace status of the specified PersistentVolumeClaim
        """
        pass

    def test_replace_namespaced_pod(self):
        """
        Test case for replace_namespaced_pod

        replace the specified Pod
        """
        pass

    def test_replace_namespaced_pod_status(self):
        """
        Test case for replace_namespaced_pod_status

        replace status of the specified Pod
        """
        pass

    def test_replace_namespaced_podtemplate(self):
        """
        Test case for replace_namespaced_podtemplate

        replace the specified PodTemplate
        """
        pass

    def test_replace_namespaced_replicationcontroller(self):
        """
        Test case for replace_namespaced_replicationcontroller

        replace the specified ReplicationController
        """
        pass

    def test_replace_namespaced_replicationcontroller_scale(self):
        """
        Test case for replace_namespaced_replicationcontroller_scale

        replace scale of the specified Scale
        """
        pass

    def test_replace_namespaced_replicationcontroller_status(self):
        """
        Test case for replace_namespaced_replicationcontroller_status

        replace status of the specified ReplicationController
        """
        pass

    def test_replace_namespaced_resourcequota(self):
        """
        Test case for replace_namespaced_resourcequota

        replace the specified ResourceQuota
        """
        pass

    def test_replace_namespaced_resourcequota_status(self):
        """
        Test case for replace_namespaced_resourcequota_status

        replace status of the specified ResourceQuota
        """
        pass

    def test_replace_namespaced_secret(self):
        """
        Test case for replace_namespaced_secret

        replace the specified Secret
        """
        pass

    def test_replace_namespaced_service(self):
        """
        Test case for replace_namespaced_service

        replace the specified Service
        """
        pass

    def test_replace_namespaced_service_status(self):
        """
        Test case for replace_namespaced_service_status

        replace status of the specified Service
        """
        pass

    def test_replace_namespaced_serviceaccount(self):
        """
        Test case for replace_namespaced_serviceaccount

        replace the specified ServiceAccount
        """
        pass

    def test_replace_node(self):
        """
        Test case for replace_node

        replace the specified Node
        """
        pass

    def test_replace_node_status(self):
        """
        Test case for replace_node_status

        replace status of the specified Node
        """
        pass

    def test_replace_persistentvolume(self):
        """
        Test case for replace_persistentvolume

        replace the specified PersistentVolume
        """
        pass

    def test_replace_persistentvolume_status(self):
        """
        Test case for replace_persistentvolume_status

        replace status of the specified PersistentVolume
        """
        pass

    def test_replace_securitycontextconstraint(self):
        """
        Test case for replace_securitycontextconstraint

        replace the specified SecurityContextConstraints
        """
        pass

    def test_watch_namespaced_watch_configmap(self):
        """
        Test case for watch_namespaced_watch_configmap

        watch changes to an object of kind ConfigMap
        """
        pass

    def test_watch_namespaced_watch_configmaps(self):
        """
        Test case for watch_namespaced_watch_configmaps

        watch individual changes to a list of ConfigMap
        """
        pass

    def test_watch_namespaced_watch_endpoint(self):
        """
        Test case for watch_namespaced_watch_endpoint

        watch changes to an object of kind Endpoints
        """
        pass

    def test_watch_namespaced_watch_endpoints(self):
        """
        Test case for watch_namespaced_watch_endpoints

        watch individual changes to a list of Endpoints
        """
        pass

    def test_watch_namespaced_watch_event(self):
        """
        Test case for watch_namespaced_watch_event

        watch changes to an object of kind Event
        """
        pass

    def test_watch_namespaced_watch_events(self):
        """
        Test case for watch_namespaced_watch_events

        watch individual changes to a list of Event
        """
        pass

    def test_watch_namespaced_watch_limitrange(self):
        """
        Test case for watch_namespaced_watch_limitrange

        watch changes to an object of kind LimitRange
        """
        pass

    def test_watch_namespaced_watch_limitranges(self):
        """
        Test case for watch_namespaced_watch_limitranges

        watch individual changes to a list of LimitRange
        """
        pass

    def test_watch_namespaced_watch_persistentvolumeclaim(self):
        """
        Test case for watch_namespaced_watch_persistentvolumeclaim

        watch changes to an object of kind PersistentVolumeClaim
        """
        pass

    def test_watch_namespaced_watch_persistentvolumeclaims(self):
        """
        Test case for watch_namespaced_watch_persistentvolumeclaims

        watch individual changes to a list of PersistentVolumeClaim
        """
        pass

    def test_watch_namespaced_watch_pod(self):
        """
        Test case for watch_namespaced_watch_pod

        watch changes to an object of kind Pod
        """
        pass

    def test_watch_namespaced_watch_pods(self):
        """
        Test case for watch_namespaced_watch_pods

        watch individual changes to a list of Pod
        """
        pass

    def test_watch_namespaced_watch_podtemplate(self):
        """
        Test case for watch_namespaced_watch_podtemplate

        watch changes to an object of kind PodTemplate
        """
        pass

    def test_watch_namespaced_watch_podtemplates(self):
        """
        Test case for watch_namespaced_watch_podtemplates

        watch individual changes to a list of PodTemplate
        """
        pass

    def test_watch_namespaced_watch_replicationcontroller(self):
        """
        Test case for watch_namespaced_watch_replicationcontroller

        watch changes to an object of kind ReplicationController
        """
        pass

    def test_watch_namespaced_watch_replicationcontrollers(self):
        """
        Test case for watch_namespaced_watch_replicationcontrollers

        watch individual changes to a list of ReplicationController
        """
        pass

    def test_watch_namespaced_watch_resourcequota(self):
        """
        Test case for watch_namespaced_watch_resourcequota

        watch changes to an object of kind ResourceQuota
        """
        pass

    def test_watch_namespaced_watch_resourcequotas(self):
        """
        Test case for watch_namespaced_watch_resourcequotas

        watch individual changes to a list of ResourceQuota
        """
        pass

    def test_watch_namespaced_watch_secret(self):
        """
        Test case for watch_namespaced_watch_secret

        watch changes to an object of kind Secret
        """
        pass

    def test_watch_namespaced_watch_secrets(self):
        """
        Test case for watch_namespaced_watch_secrets

        watch individual changes to a list of Secret
        """
        pass

    def test_watch_namespaced_watch_service(self):
        """
        Test case for watch_namespaced_watch_service

        watch changes to an object of kind Service
        """
        pass

    def test_watch_namespaced_watch_serviceaccount(self):
        """
        Test case for watch_namespaced_watch_serviceaccount

        watch changes to an object of kind ServiceAccount
        """
        pass

    def test_watch_namespaced_watch_serviceaccounts(self):
        """
        Test case for watch_namespaced_watch_serviceaccounts

        watch individual changes to a list of ServiceAccount
        """
        pass

    def test_watch_namespaced_watch_services(self):
        """
        Test case for watch_namespaced_watch_services

        watch individual changes to a list of Service
        """
        pass

    def test_watch_watch_configmaps(self):
        """
        Test case for watch_watch_configmaps

        watch individual changes to a list of ConfigMap
        """
        pass

    def test_watch_watch_endpoints(self):
        """
        Test case for watch_watch_endpoints

        watch individual changes to a list of Endpoints
        """
        pass

    def test_watch_watch_events(self):
        """
        Test case for watch_watch_events

        watch individual changes to a list of Event
        """
        pass

    def test_watch_watch_limitranges(self):
        """
        Test case for watch_watch_limitranges

        watch individual changes to a list of LimitRange
        """
        pass

    def test_watch_watch_namespace(self):
        """
        Test case for watch_watch_namespace

        watch changes to an object of kind Namespace
        """
        pass

    def test_watch_watch_namespaces(self):
        """
        Test case for watch_watch_namespaces

        watch individual changes to a list of Namespace
        """
        pass

    def test_watch_watch_node(self):
        """
        Test case for watch_watch_node

        watch changes to an object of kind Node
        """
        pass

    def test_watch_watch_nodes(self):
        """
        Test case for watch_watch_nodes

        watch individual changes to a list of Node
        """
        pass

    def test_watch_watch_persistentvolume(self):
        """
        Test case for watch_watch_persistentvolume

        watch changes to an object of kind PersistentVolume
        """
        pass

    def test_watch_watch_persistentvolumeclaims(self):
        """
        Test case for watch_watch_persistentvolumeclaims

        watch individual changes to a list of PersistentVolumeClaim
        """
        pass

    def test_watch_watch_persistentvolumes(self):
        """
        Test case for watch_watch_persistentvolumes

        watch individual changes to a list of PersistentVolume
        """
        pass

    def test_watch_watch_pods(self):
        """
        Test case for watch_watch_pods

        watch individual changes to a list of Pod
        """
        pass

    def test_watch_watch_podtemplates(self):
        """
        Test case for watch_watch_podtemplates

        watch individual changes to a list of PodTemplate
        """
        pass

    def test_watch_watch_replicationcontrollers(self):
        """
        Test case for watch_watch_replicationcontrollers

        watch individual changes to a list of ReplicationController
        """
        pass

    def test_watch_watch_resourcequotas(self):
        """
        Test case for watch_watch_resourcequotas

        watch individual changes to a list of ResourceQuota
        """
        pass

    def test_watch_watch_secrets(self):
        """
        Test case for watch_watch_secrets

        watch individual changes to a list of Secret
        """
        pass

    def test_watch_watch_securitycontextconstraint(self):
        """
        Test case for watch_watch_securitycontextconstraint

        watch changes to an object of kind SecurityContextConstraints
        """
        pass

    def test_watch_watch_securitycontextconstraints(self):
        """
        Test case for watch_watch_securitycontextconstraints

        watch individual changes to a list of SecurityContextConstraints
        """
        pass

    def test_watch_watch_serviceaccounts(self):
        """
        Test case for watch_watch_serviceaccounts

        watch individual changes to a list of ServiceAccount
        """
        pass

    def test_watch_watch_services(self):
        """
        Test case for watch_watch_services

        watch individual changes to a list of Service
        """
        pass


if __name__ == '__main__':
    unittest.main()
