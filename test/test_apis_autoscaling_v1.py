# coding: utf-8

"""
    

    

    OpenAPI spec version: 
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from __future__ import absolute_import

import os
import sys
import unittest

import lib_openshift
from lib_openshift.rest import ApiException
from lib_openshift.apis.apis_autoscaling_v1 import ApisAutoscalingV1


class TestApisAutoscalingV1(unittest.TestCase):
    """ ApisAutoscalingV1 unit test stubs """

    def setUp(self):
        self.api = lib_openshift.apis.apis_autoscaling_v1.ApisAutoscalingV1()

    def tearDown(self):
        pass

    def test_create_horizontalpodautoscaler(self):
        """
        Test case for create_horizontalpodautoscaler

        create a HorizontalPodAutoscaler
        """
        pass

    def test_create_namespaced_horizontalpodautoscaler(self):
        """
        Test case for create_namespaced_horizontalpodautoscaler

        create a HorizontalPodAutoscaler
        """
        pass

    def test_delete_namespaced_horizontalpodautoscaler(self):
        """
        Test case for delete_namespaced_horizontalpodautoscaler

        delete a HorizontalPodAutoscaler
        """
        pass

    def test_delete_namespaced_horizontalpodautoscalers(self):
        """
        Test case for delete_namespaced_horizontalpodautoscalers

        delete collection of HorizontalPodAutoscaler
        """
        pass

    def test_get_namespaced_horizontalpodautoscaler(self):
        """
        Test case for get_namespaced_horizontalpodautoscaler

        read the specified HorizontalPodAutoscaler
        """
        pass

    def test_list(self):
        """
        Test case for list

        get available resources
        """
        pass

    def test_list_horizontalpodautoscalers(self):
        """
        Test case for list_horizontalpodautoscalers

        list or watch objects of kind HorizontalPodAutoscaler
        """
        pass

    def test_list_namespaced_horizontalpodautoscalers(self):
        """
        Test case for list_namespaced_horizontalpodautoscalers

        list or watch objects of kind HorizontalPodAutoscaler
        """
        pass

    def test_patch_namespaced_horizontalpodautoscaler(self):
        """
        Test case for patch_namespaced_horizontalpodautoscaler

        partially update the specified HorizontalPodAutoscaler
        """
        pass

    def test_replace_namespaced_horizontalpodautoscaler(self):
        """
        Test case for replace_namespaced_horizontalpodautoscaler

        replace the specified HorizontalPodAutoscaler
        """
        pass

    def test_replace_namespaced_horizontalpodautoscaler_status(self):
        """
        Test case for replace_namespaced_horizontalpodautoscaler_status

        replace status of the specified HorizontalPodAutoscaler
        """
        pass

    def test_watch_namespaced_watch_horizontalpodautoscaler(self):
        """
        Test case for watch_namespaced_watch_horizontalpodautoscaler

        watch changes to an object of kind HorizontalPodAutoscaler
        """
        pass

    def test_watch_namespaced_watch_horizontalpodautoscalers(self):
        """
        Test case for watch_namespaced_watch_horizontalpodautoscalers

        watch individual changes to a list of HorizontalPodAutoscaler
        """
        pass

    def test_watch_watch_horizontalpodautoscalers(self):
        """
        Test case for watch_watch_horizontalpodautoscalers

        watch individual changes to a list of HorizontalPodAutoscaler
        """
        pass


if __name__ == '__main__':
    unittest.main()
